    private void processSubArrays(Map<String, String> subArrayMappings, String key, Object value, Map<String, JSONObject> subObjects, Map<String, JSONArray> subArrays) {
        for (String subArrayKey : subArrayMappings.keySet()) {
            if (key != null && (key.startsWith(subArrayKey + ".") || key.startsWith(subArrayKey + "#"))) {
                String subArrayName = subArrayMappings.get(subArrayKey);
                String subKey = key.substring(subArrayKey.length() + 1);

                // Check if the key contains "#"
                if (subKey.startsWith("#")) {
                    // Handle single object case
                    String singleObjectKey = subKey.substring(1); // Remove the "#"

                    // Ensure that subObjects has the subArrayName initialized as a JSONObject
                    JSONObject singleObject = subObjects.computeIfAbsent(subArrayName, k -> new JSONObject());

                    if (singleObjectKey.contains(".")) {
                        // Handle subelement case within the single object
                        String[] parts = singleObjectKey.split("\\.", 2);
                        String parentKey = parts[0];
                        String childKey = parts[1];

                        JSONObject parentObject = singleObject.optJSONObject(parentKey);
                        if (parentObject == null) {
                            parentObject = new JSONObject();
                            singleObject.put(parentKey, parentObject);
                        }
                        parentObject.put(childKey, value);
                    } else {
                        // Add the value directly to the single object
                        singleObject.put(singleObjectKey, value);
                    }
                    return;
                } else {
                    // Handle normal array case
                    JSONArray array = subArrays.computeIfAbsent(subArrayName, k -> new JSONArray());

                    // Create or update the last JSONObject in the array
                    JSONObject arrayItem;
                    if (array.length() == 0 || array.getJSONObject(array.length() - 1).has(subKey)) {
                        arrayItem = new JSONObject();
                        array.put(arrayItem);
                    } else {
                        arrayItem = array.getJSONObject(array.length() - 1);
                    }

                    if (subKey.contains(".")) {
                        // Handle subelement case
                        String[] parts = subKey.split("\\.", 2);
                        String parentKey = parts[0];
                        String childKey = parts[1];

                        JSONObject parentObject = arrayItem.optJSONObject(parentKey);
                        if (parentObject == null) {
                            parentObject = new JSONObject();
                            arrayItem.put(parentKey, parentObject);
                        }
                        parentObject.put(childKey, value);
                    } else {
                        // Normal logic
                        arrayItem.put(subKey, value);
                    }
                }
                return;
            }
        }
    }
