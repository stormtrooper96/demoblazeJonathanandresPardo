import java.io.FileInputStream;
import java.io.IOException;
import java.util.Iterator;
import org.apache.poi.ss.usermodel.*;
import com.google.gson.JsonArray;
import com.google.gson.JsonObject;
import com.google.gson.JsonPrimitive;

public class ExcelToJson {
    public static void main(String[] args) {
        String excelFilePath = "ruta/a/tu/archivo.xlsx";
        try {
            JsonObject jsonObject = readExcelFile(excelFilePath);
            String jsonString = jsonObject.toString()
                                         .replaceAll("\\\\n|\\\\r|\\s{2,}", ""); // Eliminar saltos de l√≠nea y espacios en blanco

            System.out.println(jsonString);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static JsonObject readExcelFile(String excelFilePath) throws IOException {
        FileInputStream inputStream = new FileInputStream(excelFilePath);
        Workbook workbook = WorkbookFactory.create(inputStream);
        Sheet sheet = workbook.getSheetAt(0);
        Iterator<Row> iterator = sheet.iterator();

        JsonObject root = new JsonObject();

        // Leer encabezados
        Row headerRow = iterator.next();
        Row dataRow = iterator.next();

        for (int i = 3; i < headerRow.getLastCellNum(); i++) {
            Cell headerCell = headerRow.getCell(i);
            Cell dataCell = dataRow.getCell(i);
            if (headerCell != null && dataCell != null) {
                String headerValue = headerCell.getStringCellValue();
                String dataValue = getCellValue(dataCell);

                if (headerValue.equals("unelemento")) {
                    JsonArray unelementoArray = new JsonArray();
                    while (iterator.hasNext()) {
                        Row row = iterator.next();
                        JsonObject item = new JsonObject();

                        for (int j = 3; j < row.getLastCellNum(); j++) {
                            Cell cell = row.getCell(j);
                            if (cell != null) {
                                String cellHeader = headerRow.getCell(j).getStringCellValue();
                                String cellValue = getCellValue(cell);
                                if (!cellValue.isEmpty()) {
                                    item.addProperty(cellHeader, cellValue);
                                }
                            }
                        }
                        if (item.size() > 0) {
                            unelementoArray.add(item);
                        }
                    }
                    root.add(headerValue, unelementoArray);
                } else {
                    root.addProperty(headerValue, dataValue);
                }
            }
        }

        workbook.close();
        inputStream.close();
        return root;
    }

    private static String getCellValue(Cell cell) {
        switch (cell.getCellType()) {
            case STRING:
                return cell.getStringCellValue();
            case NUMERIC:
                if (DateUtil.isCellDateFormatted(cell)) {
                    return cell.getDateCellValue().toString();
                } else {
                    return String.valueOf(cell.getNumeric
